(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{100:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return m}));var b=a(0),n=a.n(b);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);t&&(b=b.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,b)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,b,n=function(e,t){if(null==e)return{};var a,b,n={},r=Object.keys(e);for(b=0;b<r.length;b++)a=r[b],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(b=0;b<r.length;b++)a=r[b],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var O=n.a.createContext({}),j=function(e){var t=n.a.useContext(O),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=j(e.components);return n.a.createElement(O.Provider,{value:t},e.children)},o={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var a=e.components,b=e.mdxType,r=e.originalType,c=e.parentName,O=i(e,["components","mdxType","originalType","parentName"]),p=j(a),d=b,m=p["".concat(c,".").concat(d)]||p[d]||o[d]||r;return a?n.a.createElement(m,l(l({ref:t},O),{},{components:a})):n.a.createElement(m,l({ref:t},O))}));function m(e,t){var a=arguments,b=t&&t.mdxType;if("string"==typeof e||b){var r=a.length,c=new Array(r);c[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:b,c[1]=l;for(var O=2;O<r;O++)c[O]=a[O];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},85:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return j}));var b=a(2),n=a(6),r=(a(0),a(100)),c={title:"Functions",description:"functions",layout:"notopic",icon:"code-file",weight:40,slug:"/functions/"},l={unversionedId:"functions/index",id:"functions/index",isDocsHomePage:!1,title:"Functions",description:"functions",source:"@site/docs/functions/index.md",slug:"/functions/",permalink:"/docs/docs/functions/",editUrl:"https://github.com/evilsoft/crocks/edit/master/docs/docs/functions/index.md",version:"current",sidebar:"sidebar",previous:{title:"Sum",permalink:"/docs/docs/monoids/Sum"},next:{title:"Combinators",permalink:"/docs/docs/functions/combinators"}},i=[{value:"Combinators",id:"combinators",children:[]},{value:"Helpers",id:"helpers",children:[]},{value:"Logic",id:"logic",children:[]}],O={rightToc:i};function j(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(r.b)("wrapper",Object(b.a)({},O,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"There are (6) function classifications included in this library:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"#combinators"}),"Combinators"),": A collection of functions that are used for\nworking with other functions. These do things like compose (2) functions\ntogether, or flip arguments on a function. They typically either take a\nfunction, return a function or a bit a both. These are considered the glue that\nholds the mighty house of ",Object(r.b)("inlineCode",{parentName:"p"},"crocks")," together and a valuable aid in writing\nreusable code.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"#helpers"}),"Helper Functions"),": All other support functions that are\neither convenient versions of combinators or not even combinators at all cover\nthis group.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"#logic"}),"Logic Functions"),": A helpful collection of Logic based\ncombinators. All of these functions work with predicate functions and let you\ncombine them in some very interesting ways.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"predicate-functions"}),"Predicate Functions"),": A helpful collection of predicate\nfunctions to get you started.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"pointfree-functions"}),"Point-free Functions"),": Wanna use these ADTs in a\nway that you never have to reference the actual data being worked on? Well here\nis where you will find all of these functions to do that. For every algebra\navailable on both the ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"../crocks/"}),"Crocks")," and ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"../monoids/"}),"Monoids")," there is a\nfunction here.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"transformation-functions"}),"Transformation Functions"),": All the functions found\nhere are used to transform from one type to another, naturally. These come are\nhandy in situations where you have functions that return one type (like\nan ",Object(r.b)("inlineCode",{parentName:"p"},"Either"),"), but are working in a context of another (say ",Object(r.b)("inlineCode",{parentName:"p"},"Maybe"),"). You would\nlike to compose these, but in doing so will result in a nesting that you will\nneed to account for for the rest of your flow."))),Object(r.b)("h2",{id:"combinators"},"Combinators"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:"left"}),"Function"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:"left"}),"Signature"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:"left"}),"Location"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"combinators#applyto"}),Object(r.b)("inlineCode",{parentName:"a"},"applyTo"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"a -> (a -> b) -> b")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/combinators/applyTo"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"combinators#composeb"}),Object(r.b)("inlineCode",{parentName:"a"},"composeB"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(b -> c) -> (a -> b) -> a -> c")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/combinators/composeB"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"combinators#constant"}),Object(r.b)("inlineCode",{parentName:"a"},"constant"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"a -> () -> a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/combinators/constant"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"combinators#converge"}),Object(r.b)("inlineCode",{parentName:"a"},"converge"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(b -> c -> d) -> (a -> b) -> (a -> c) -> a -> d")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/combinators/converge"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"combinators#flip"}),Object(r.b)("inlineCode",{parentName:"a"},"flip"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(a -> b -> c) -> b -> a -> c")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/combinators/flip"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"combinators#identity"}),Object(r.b)("inlineCode",{parentName:"a"},"identity"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"a -> a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/combinators/identity"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"combinators#psi"}),Object(r.b)("inlineCode",{parentName:"a"},"psi"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(b -> b -> c) -> (a -> b) -> a -> a -> c")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/combinators/psi"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"combinators#substitution"}),Object(r.b)("inlineCode",{parentName:"a"},"substitution"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(a -> b -> c) -> (a -> b) -> a -> c")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/combinators/substitution"))))),Object(r.b)("h2",{id:"helpers"},"Helpers"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:"left"}),"Function"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:"left"}),"Signature"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:"left"}),"Location"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#assign"}),Object(r.b)("inlineCode",{parentName:"a"},"assign"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Object -> Object -> Object")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/assign"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#setprop"}),Object(r.b)("inlineCode",{parentName:"a"},"assoc")),Object(r.b)("br",null),Object(r.b)("i",null,"(deprecated)")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"(String ","|"," Integer) -> a -> (Object ","|"," Array) -> (Object ","|"," Array)")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/assoc"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#binary"}),Object(r.b)("inlineCode",{parentName:"a"},"binary"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"((*) -> c) -> a -> b -> c")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/binary"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"../crocks/Pair#branch"}),Object(r.b)("inlineCode",{parentName:"a"},"branch"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"a -> Pair a a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Pair/branch"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#compose"}),Object(r.b)("inlineCode",{parentName:"a"},"compose"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"((y -> z), ..., (a -> b)) -> a -> z")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/compose"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#composek"}),Object(r.b)("inlineCode",{parentName:"a"},"composeK"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Chain m => ((y -> m z), ..., (a -> m b)) -> a -> m z")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/composeK"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#composep"}),Object(r.b)("inlineCode",{parentName:"a"},"composeP"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Promise p => ((y -> p z c), ..., (a -> p b c)) -> a -> p z c")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/composeP"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#composes"}),Object(r.b)("inlineCode",{parentName:"a"},"composeS"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Semigroupoid s => (s y z, ..., s a b) -> s a z")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/composeS"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#curry"}),Object(r.b)("inlineCode",{parentName:"a"},"curry"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"((a, b, ...) -> z) -> a -> b -> ... -> z")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/curry"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#defaultprops"}),Object(r.b)("inlineCode",{parentName:"a"},"defaultProps"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Object -> Object -> Object")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/defaultProps"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#defaultto"}),Object(r.b)("inlineCode",{parentName:"a"},"defaultTo"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"a -> b -> a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/defaultTo"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#unsetprop"}),Object(r.b)("inlineCode",{parentName:"a"},"dissoc")),Object(r.b)("br",null),Object(r.b)("i",null,"(deprecated)")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"(String ","|"," Integer) -> a -> a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/dissoc"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#fanout"}),Object(r.b)("inlineCode",{parentName:"a"},"fanout"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(a -> b) -> (a -> c) -> (a -> Pair b c)")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Pair/fanout"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"../crocks/Maybe#find"}),Object(r.b)("inlineCode",{parentName:"a"},"find"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"Foldable f => ((a -> Boolean) ","|"," Pred) -> f a -> Maybe a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Maybe/find"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#frompairs"}),Object(r.b)("inlineCode",{parentName:"a"},"fromPairs"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Foldable f => f (Pair String a) -> Object")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/fromPairs"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"../crocks/Maybe#getpath"}),Object(r.b)("inlineCode",{parentName:"a"},"getPath"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"[ (String ","|"," Integer) ]"," -> a -> Maybe b")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Maybe/getPath"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#getpathor"}),Object(r.b)("inlineCode",{parentName:"a"},"getPathOr"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"a -> f ","[ (String ","|"," Integer) ]"," -> b -> a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/getPathOr"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"../crocks/Maybe#getprop"}),Object(r.b)("inlineCode",{parentName:"a"},"getProp"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"(String ","|"," Integer) -> a -> Maybe b")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Maybe/getProp"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#getpropor"}),Object(r.b)("inlineCode",{parentName:"a"},"getPropOr"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"a -> (String ","|"," Integer) -> b -> c")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/getPropOr"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#lifta2"}),Object(r.b)("inlineCode",{parentName:"a"},"liftA2"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Applicative m => (a -> b -> c) -> m a -> m b -> m c")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/liftA2"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#lifta3"}),Object(r.b)("inlineCode",{parentName:"a"},"liftA3"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Applicative m => (a -> b -> c -> d) -> m a -> m b -> m c -> m d")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/liftA3"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#liftn"}),Object(r.b)("inlineCode",{parentName:"a"},"liftN"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Applicative m => Number -> ((*) -> a) -> (*m) -> m a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/liftN"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#mapprops"}),Object(r.b)("inlineCode",{parentName:"a"},"mapProps"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Object -> Object -> Object")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/mapProps"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#mapreduce"}),Object(r.b)("inlineCode",{parentName:"a"},"mapReduce"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Foldable f => (a -> b) -> (c -> b -> c) -> c -> f a -> c")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/mapReduce"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#mconcat"}),Object(r.b)("inlineCode",{parentName:"a"},"mconcat"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Monoid m, Foldable f => m -> f a -> m a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/mconcat"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#mconcatmap"}),Object(r.b)("inlineCode",{parentName:"a"},"mconcatMap"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Monoid m, Foldable f => m -> (b -> a) -> f b -> m a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/mconcatMap"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#mreduce"}),Object(r.b)("inlineCode",{parentName:"a"},"mreduce"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Monoid m, Foldable f => m -> f a -> a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/mreduce"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#mreducemap"}),Object(r.b)("inlineCode",{parentName:"a"},"mreduceMap"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Monoid m, Foldable f => m -> (b -> a) -> f b -> a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/mreduceMap"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#nary"}),Object(r.b)("inlineCode",{parentName:"a"},"nAry"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Number -> ((*) -> a) -> (*) -> a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/nAry"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#objof"}),Object(r.b)("inlineCode",{parentName:"a"},"objOf"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"String -> a -> Object")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/objOf"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#omit"}),Object(r.b)("inlineCode",{parentName:"a"},"omit"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"[ String ] -> Object -> Object")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/omit"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#once"}),Object(r.b)("inlineCode",{parentName:"a"},"once"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"((*) -> a) -> ((*) -> a)")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/once"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#partial"}),Object(r.b)("inlineCode",{parentName:"a"},"partial"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(((*) -> c), *) -> (*) -> c")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/partial"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#pick"}),Object(r.b)("inlineCode",{parentName:"a"},"pick"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Foldable f => f String -> Object -> Object")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/pick"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#pipe"}),Object(r.b)("inlineCode",{parentName:"a"},"pipe"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"((a -> b), ..., (y -> z)) -> a -> z")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/pipe"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#pipek"}),Object(r.b)("inlineCode",{parentName:"a"},"pipeK"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Chain m => ((a -> m b), ..., (y -> m z)) -> a -> m z")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/pipeK"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#pipep"}),Object(r.b)("inlineCode",{parentName:"a"},"pipeP"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Promise p => ((a -> p b d), ..., (y -> p z d)) -> a -> p z d")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/pipeP"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#pipes"}),Object(r.b)("inlineCode",{parentName:"a"},"pipeS"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Semigroupoid s => (s a b, ..., s y z) -> s a z")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/pipeS"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"../crocks/Maybe#getprop"}),Object(r.b)("inlineCode",{parentName:"a"},"prop")),Object(r.b)("br",null),Object(r.b)("i",null,"(deprecated)")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"(String ","|"," Integer) -> a -> Maybe b")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Maybe/prop"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#getpropor"}),Object(r.b)("inlineCode",{parentName:"a"},"propOr")),Object(r.b)("br",null),Object(r.b)("i",null,"(deprecated)")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"a -> (String ","|"," Integer) -> b -> c")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/propOr"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"../crocks/Maybe#getpath"}),Object(r.b)("inlineCode",{parentName:"a"},"propPath")),Object(r.b)("br",null),Object(r.b)("i",null,"(deprecated)")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"[ (String ","|"," Integer) ]"," -> a -> Maybe b")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Maybe/propPath"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#getpathor"}),Object(r.b)("inlineCode",{parentName:"a"},"propPathOr")),Object(r.b)("br",null),Object(r.b)("i",null,"(deprecated)")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"a -> ","[ (String ","|"," Integer) ]"," -> b -> a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/propPathOr"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"../crocks/Maybe#safe"}),Object(r.b)("inlineCode",{parentName:"a"},"safe"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"((a -> Boolean) ","|"," Pred) -> a -> Maybe a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Maybe/safe"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"../crocks/Maybe#safeafter"}),Object(r.b)("inlineCode",{parentName:"a"},"safeAfter"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"safeAfter :: ((b -> Boolean) ","|"," Pred) -> (a -> b) -> a -> Maybe b")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Maybe/safeAfter"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"../crocks/Maybe#safelift"}),Object(r.b)("inlineCode",{parentName:"a"},"safeLift"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"((a -> Boolean) ","|"," Pred) -> (a -> b) -> a -> Maybe b")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Maybe/safeLift"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#setpath"}),Object(r.b)("inlineCode",{parentName:"a"},"setPath"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"[ (String ","|"," Integer) ]"," -> a -> (Object ","|"," Array) -> (Object ","|"," Array)")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/setPath"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#setprop"}),Object(r.b)("inlineCode",{parentName:"a"},"setProp"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"(String ","|"," Integer) -> a -> (Object ","|"," Array) -> (Object ","|"," Array)")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/setProp"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#tap"}),Object(r.b)("inlineCode",{parentName:"a"},"tap"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(a -> b) -> a -> a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/tap"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"../crocks/Pair#topairs"}),Object(r.b)("inlineCode",{parentName:"a"},"toPairs"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Object -> List (Pair String a)")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Pair/toPairs"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#trycatch"}),Object(r.b)("inlineCode",{parentName:"a"},"tryCatch"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"((*) -> b) -> (*) -> Result e b")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Result/tryCatch"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#unary"}),Object(r.b)("inlineCode",{parentName:"a"},"unary"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"((*) -> b) -> a -> b")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/unary"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#unit"}),Object(r.b)("inlineCode",{parentName:"a"},"unit"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"() -> undefined")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/unit"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#unsetpath"}),Object(r.b)("inlineCode",{parentName:"a"},"unsetPath"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"[ (String ","|"," Integer) ]"," -> a -> a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/unsetPath"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"helpers#unsetprop"}),Object(r.b)("inlineCode",{parentName:"a"},"unsetProp"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"(String ","|"," Integer) -> a -> a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/helpers/unsetProp"))))),Object(r.b)("h2",{id:"logic"},"Logic"),Object(r.b)("p",null,"Every function in ",Object(r.b)("inlineCode",{parentName:"p"},"crocks"),", that takes a predicate function of the\nform ",Object(r.b)("inlineCode",{parentName:"p"},"a -> Boolean"),", can be replaced with a ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"../crocks/Pred"}),"Pred")," instance of the\ntype: ",Object(r.b)("inlineCode",{parentName:"p"},"Pred a")," and vice-versa"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:"left"}),"Function"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:"left"}),"Signature"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:"left"}),"Location"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"logic-functions#and"}),Object(r.b)("inlineCode",{parentName:"a"},"and"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(a -> Boolean) -> (a -> Boolean) -> a -> Boolean")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/logic/and"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"logic-functions#ifelse"}),Object(r.b)("inlineCode",{parentName:"a"},"ifElse"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(a -> Boolean) -> (a -> b) -> (a -> b) -> a -> b")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/logic/ifElse"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"logic-functions#implies"}),Object(r.b)("inlineCode",{parentName:"a"},"implies"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(a -> Boolean) -> (a -> Boolean) -> a -> Boolean")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/logic/implies"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"logic-functions#not"}),Object(r.b)("inlineCode",{parentName:"a"},"not"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(a -> Boolean) -> a -> Boolean")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/logic/not"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"logic-functions#or"}),Object(r.b)("inlineCode",{parentName:"a"},"or"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(a -> Boolean) -> (a -> Boolean) -> a -> Boolean")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/logic/or"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"logic-functions#unless"}),Object(r.b)("inlineCode",{parentName:"a"},"unless"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(a -> Boolean) -> (a -> a) -> a -> a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/logic/unless"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"logic-functions#when"}),Object(r.b)("inlineCode",{parentName:"a"},"when"))),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(a -> Boolean) -> (a -> a) -> a -> a")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/logic/when"))))))}j.isMDXComponent=!0}}]);