(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{100:function(e,t,n){"use strict";n.d(t,"a",(function(){return O})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},b=Object.keys(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),p=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},O=function(e){var t=p(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},j=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,b=e.originalType,c=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),O=p(n),j=a,m=O["".concat(c,".").concat(j)]||O[j]||d[j]||b;return n?r.a.createElement(m,i(i({ref:t},o),{},{components:n})):r.a.createElement(m,i({ref:t},o))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var b=n.length,c=new Array(b);c[0]=j;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var o=2;o<b;o++)c[o]=n[o];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}j.displayName="MDXCreateElement"},75:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(6),b=(n(0),n(100)),c={title:"Monoids",description:"Monoids API",layout:"notopic",icon:"code-file",weight:3,slug:"/monoids/"},i={unversionedId:"monoids/index",id:"monoids/index",isDocsHomePage:!1,title:"Monoids",description:"Monoids API",source:"@site/docs/monoids/index.md",slug:"/monoids/",permalink:"/crocks/docs/monoids/",editUrl:"https://github.com/evilsoft/crocks/edit/master/docs/docs/monoids/index.md",version:"current",sidebar:"sidebar",previous:{title:"Tuple",permalink:"/crocks/docs/crocks/Tuple"},next:{title:"All",permalink:"/crocks/docs/monoids/All"}},l=[],o={rightToc:l};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"Each ",Object(b.b)("inlineCode",{parentName:"p"},"Monoid")," provides a means to represent a binary operation and is usually\nlocked down to a specific type. These are great when you need to combine a list\nof values down to one value. In this library, any ADT that provides both\nan ",Object(b.b)("inlineCode",{parentName:"p"},"empty")," and a ",Object(b.b)("inlineCode",{parentName:"p"},"concat")," function can be used as a ",Object(b.b)("inlineCode",{parentName:"p"},"Monoid"),". There are a few\nof the ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"../crocks/"}),"crocks")," that are also monoidial, so be on the look out for those\nas well."),Object(b.b)("p",null,"All ",Object(b.b)("inlineCode",{parentName:"p"},"Monoids")," work with the following helper functions\n",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"../functions/helpers#mconcat"}),"mconcat"),", ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"../functions/helpers#mreduce"}),"mreduce"),", ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"../functions/helpers#mconcatmap"}),"mconcatMap")," and ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"../functions/helpers#mreducemap"}),"mreduceMap"),"."),Object(b.b)("p",null,"All ",Object(b.b)("inlineCode",{parentName:"p"},"Monoids")," provide ",Object(b.b)("inlineCode",{parentName:"p"},"empty")," functions on their Constructors as well\nas the following Instance Functions: ",Object(b.b)("inlineCode",{parentName:"p"},"valueOf"),", ",Object(b.b)("inlineCode",{parentName:"p"},"empty")," and ",Object(b.b)("inlineCode",{parentName:"p"},"concat"),"."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Monoid"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Operation"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Empty (Identity)"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"All"}),Object(b.b)("inlineCode",{parentName:"a"},"All"))),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Logical AND"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"true"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"Any"}),Object(b.b)("inlineCode",{parentName:"a"},"Any"))),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Boolean"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Logical OR"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"false"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"Assign"}),Object(b.b)("inlineCode",{parentName:"a"},"Assign"))),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Object"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"Object.assign")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"{lb}{rb}"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"Endo"}),Object(b.b)("inlineCode",{parentName:"a"},"Endo"))),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Function"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"compose")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"identity"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"First"}),Object(b.b)("inlineCode",{parentName:"a"},"First"))),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"../crocks/Maybe"}),Object(b.b)("inlineCode",{parentName:"a"},"Maybe"))),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"First")," ",Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"../crocks/Maybe#just"}),Object(b.b)("inlineCode",{parentName:"a"},"Just"))),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"../crocks/Maybe#nothing"}),Object(b.b)("inlineCode",{parentName:"a"},"Nothing")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"Last"}),Object(b.b)("inlineCode",{parentName:"a"},"Last"))),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"../crocks/Maybe"}),Object(b.b)("inlineCode",{parentName:"a"},"Maybe"))),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"Last")," ",Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"../crocks/Maybe#just"}),Object(b.b)("inlineCode",{parentName:"a"},"Just"))),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"../crocks/Maybe#nothing"}),Object(b.b)("inlineCode",{parentName:"a"},"Nothing")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"Max"}),Object(b.b)("inlineCode",{parentName:"a"},"Max"))),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"Math.max")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"-Infinity"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"Min"}),Object(b.b)("inlineCode",{parentName:"a"},"Min"))),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"Math.min")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"Infinity"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"Prod"}),Object(b.b)("inlineCode",{parentName:"a"},"Prod"))),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Multiplication"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"1"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"Sum"}),Object(b.b)("inlineCode",{parentName:"a"},"Sum"))),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Number"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Addition"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"0"))))))}p.isMDXComponent=!0}}]);