(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{114:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return j}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),o=function(e){var t=r.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=o(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,i=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),p=o(a),O=n,j=p["".concat(i,".").concat(O)]||p[O]||m[O]||b;return a?r.a.createElement(j,c(c({ref:t},l),{},{components:a})):r.a.createElement(j,c({ref:t},l))}));function j(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,i=new Array(b);i[0]=O;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<b;l++)i[l]=a[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"},83:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return d})),a.d(t,"default",(function(){return o}));var n=a(3),r=a(7),b=(a(0),a(114)),i={title:"Point-free Functions",description:"Point-free Functions API",layout:"notopic",functions:["alt","ap","bichain","bimap","both","chain","coalesce","comparewith","concat","cons","contramap","either","empty","equals","extend","filter","first","fold","foldmap","head","init","last","map","merge","option","promap","race","reduce","reduceright","run","runwith","second","sequence","swap","tail","traverse","valueof"],weight:50},c={unversionedId:"functions/pointfree-functions",id:"functions/pointfree-functions",isDocsHomePage:!1,title:"Point-free Functions",description:"Point-free Functions API",source:"@site/docs/functions/pointfree-functions.md",slug:"/functions/pointfree-functions",permalink:"/crocks/docs/functions/pointfree-functions",editUrl:"https://github.com/evilsoft/crocks/edit/master/docs/docs/functions/pointfree-functions.md",version:"current",sidebar:"sidebar",previous:{title:"Logic Functions",permalink:"/crocks/docs/functions/logic-functions"},next:{title:"Predicate Functions",permalink:"/crocks/docs/functions/predicate-functions"}},d=[{value:"Signatures",id:"signatures",children:[]},{value:"Datatypes",id:"datatypes",children:[]}],l={toc:d};function o(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"While it can seem natural to work with all these containers in a fluent fashion,\nit can get cumbersome and hard to get a lot of reuse out of. A way to really get\nthe most out of re-usability in JavaScript is to take what is called a point-free\napproach. Below is a small code same to contrast the difference between the two\ncalling styles:"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js",metastring:"runkit",runkit:!0},'import map from "crocks/pointfree/map";\n\nimport compose from "crocks/helpers/compose";\nimport isInteger from "crocks/predicates/isInteger";\nimport safe from "crocks/Maybe/safe";\n\n// isEven :: Integer -> Boolean\nconst isEven = (x) => x % 2 === 0;\n\n// maybeInt :: a -> Maybe Integer\nconst maybeInt = safe(isInteger);\n\n// fluentIsEven :: a -> Maybe Boolean\nconst fluentIsEven = (data) => maybeInt(data).map(isEven);\n\n// pointfreeIsEven :: a -> Maybe Boolean\nconst pointfreeIsEven = compose(map(isEven), maybeInt);\n\nfluentIsEven(5);\n//=> Just false\n\nfluentIsEven("number");\n//=> Nothing\n\nfluentIsEven(6);\n//=> Just true\n\npointfreeIsEven(5);\n//=> Just false\n\npointfreeIsEven("not even");\n//=> Nothing\n\npointfreeIsEven(6);\n//=> Just true\n')),Object(b.b)("p",null,"These functions provide a very clean way to build out very simple functions and\ncompose them all together to compose a more complicated flow. Each point-free\nfunction provided in ",Object(b.b)("inlineCode",{parentName:"p"},"crocks"),' is "auto-curried" and follows a "data-last"\npattern in the order of how it receives it\'s arguments. Typically the most\nstable of the arguments comes first, moving all the way to the least stable\nargument (which usually is the data flowing through your composition). Below\nlists the provided functions and the data types they work with (',Object(b.b)("inlineCode",{parentName:"p"},"m")," refers to an\naccepted Datatype):"),Object(b.b)("h3",{id:"signatures"},"Signatures"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Function"),Object(b.b)("th",{parentName:"tr",align:"left"},"Signature"),Object(b.b)("th",{parentName:"tr",align:"left"},"Location"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"alt")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m a -> m a -> m a")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"ap")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m a -> m (a -> b) -> m b")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"bichain")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"(a -> m c d) -> (b -> m c d) -> m a b -> m c d")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"bimap")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"(a -> c) -> (b -> d) -> m a b -> m c d")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"both")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m (a -> b) -> m (Pair a a -> Pair b b)")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"chain")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"(a -> m b) -> m a -> m b")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"coalesce")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"(a -> c) -> (b -> c) -> m a b -> m _ c")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"compareWith")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"a -> a -> m a -> b")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"concat")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m a -> m a -> m a")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"cons")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"a -> m a -> m a")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"contramap")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"(b -> a) -> m a -> m b")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"either")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"(a -> c) -> (b -> c) -> m a b -> c")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"empty")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m -> m")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"equals")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m -> m -> Boolean")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"../crocks/State#evalwith-pointfree"},Object(b.b)("inlineCode",{parentName:"a"},"evalWith"))),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"s -> m -> a")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/State"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"../crocks/State#execwith-pointfree"},Object(b.b)("inlineCode",{parentName:"a"},"execWith"))),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"s -> m -> s")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/State"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"extend")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"(m a -> b) -> m a -> m b")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"filter")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("code",null,"((a -> Boolean) ","|"," Pred a) -> m a -> m a")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"first")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m (a -> b) -> m (Pair a c -> Pair b c)")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"fold")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Semigroup s => m s -> s")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"foldMap")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Semigroup s => (a -> s) -> m a -> s")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"../crocks/Pair#fst-pointfree"},Object(b.b)("inlineCode",{parentName:"a"},"fst"))),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m a b -> a")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/Pair"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"head")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m a -> Maybe a")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"init")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m a -> Maybe (m a)")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"last")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m a -> Maybe a")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"log")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m a b -> a")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/Writer"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"map")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"(a -> b) -> m a -> m b")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"merge")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"(a -> b -> c) -> m a b -> c")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"../crocks/Tuple#nmap"},Object(b.b)("inlineCode",{parentName:"a"},"nmap"))),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Integer -> ...(* -> *) m ...* -> m ...*")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/Tuple"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"option")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"a -> m a -> a")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"../crocks/Tuple#project"},Object(b.b)("inlineCode",{parentName:"a"},"project"))),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Integer -> m ...* -> a")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/Tuple"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"promap")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"(c -> a) -> (b -> d) -> m a b -> m c d")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"../crocks/Async#race-pointfree"},Object(b.b)("inlineCode",{parentName:"a"},"race"))),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m e a -> m e a -> m e a")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/Async"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"read")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m a b -> Pair a b")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/Writer"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"reduce")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"(b -> a -> b) -> b -> m a -> b")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"reduceRight")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"(b -> a -> b) -> b -> m a -> b")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"reject")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("code",null,"((a -> Boolean) ","|"," Pred a) -> m a -> m a")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"run")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m a -> b")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"runWith")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"a -> m -> b")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"second")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m (a -> b) -> m (Pair c a -> Pair c b)")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"sequence")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("code",null,"Applicative TypeRep t, Apply f => (t ","|"," (b -> f b)) -> m (f a) -> f (m a)")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"../crocks/Pair#snd-pointfree"},Object(b.b)("inlineCode",{parentName:"a"},"snd"))),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m a b -> b")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/Pair"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"swap")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"(c -> d) -> (a -> b) -> m c a -> m b d")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"tail")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m a -> Maybe (m a)")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"traverse")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("code",null,"Applicative TypeRep t, Apply f => (t ","|"," (c -> f c)) -> (a -> f b) -> m (f a) -> f (m b)")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"valueOf")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"m a -> a")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))))),Object(b.b)("h3",{id:"datatypes"},"Datatypes"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Function"),Object(b.b)("th",{parentName:"tr",align:"left"},"Datatypes"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"alt")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Async#alt"},Object(b.b)("inlineCode",{parentName:"a"},"Async")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Either#alt"},Object(b.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Maybe#alt"},Object(b.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Result#alt"},Object(b.b)("inlineCode",{parentName:"a"},"Result")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"ap")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Async#ap"},Object(b.b)("inlineCode",{parentName:"a"},"Async")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Const#ap"},Object(b.b)("inlineCode",{parentName:"a"},"Const")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Either#ap"},Object(b.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Identity"),", ",Object(b.b)("inlineCode",{parentName:"td"},"IO"),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Maybe#ap"},Object(b.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Pair#ap"},Object(b.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Reader#ap"},Object(b.b)("inlineCode",{parentName:"a"},"Reader")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Result#ap"},Object(b.b)("inlineCode",{parentName:"a"},"Result")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/State#ap"},Object(b.b)("inlineCode",{parentName:"a"},"State")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Unit"),", ",Object(b.b)("inlineCode",{parentName:"td"},"Writer"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"bichain")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Async#bichain"},Object(b.b)("inlineCode",{parentName:"a"},"Async")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Either#bichain"},Object(b.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Maybe#bichain"},Object(b.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Result#bichain"},Object(b.b)("inlineCode",{parentName:"a"},"Result")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"bimap")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Async#bimap"},Object(b.b)("inlineCode",{parentName:"a"},"Async")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Either#bimap"},Object(b.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Pair#bimap"},Object(b.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Result#bimap"},Object(b.b)("inlineCode",{parentName:"a"},"Result")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"both")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Arrow#both"},Object(b.b)("inlineCode",{parentName:"a"},"Arrow")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Function"),", ",Object(b.b)("inlineCode",{parentName:"td"},"Star"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"chain")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Async#chain"},Object(b.b)("inlineCode",{parentName:"a"},"Async")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Const#chain"},Object(b.b)("inlineCode",{parentName:"a"},"Const")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Either#chain"},Object(b.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Identity"),", ",Object(b.b)("inlineCode",{parentName:"td"},"IO"),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Maybe#chain"},Object(b.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Pair#chain"},Object(b.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Reader#chain"},Object(b.b)("inlineCode",{parentName:"a"},"Reader")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Result#chain"},Object(b.b)("inlineCode",{parentName:"a"},"Result")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/State#chain"},Object(b.b)("inlineCode",{parentName:"a"},"State")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Unit"),", ",Object(b.b)("inlineCode",{parentName:"td"},"Writer"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"coalesce")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Async#coalesce"},Object(b.b)("inlineCode",{parentName:"a"},"Async")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Either#coalesce"},Object(b.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Maybe#coalesce"},Object(b.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Result#coalesce"},Object(b.b)("inlineCode",{parentName:"a"},"Result")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"compareWith")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Equiv#comparewith"},Object(b.b)("inlineCode",{parentName:"a"},"Equiv")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"concat")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../monoids/All#concat"},Object(b.b)("inlineCode",{parentName:"a"},"All")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Any#concat"},Object(b.b)("inlineCode",{parentName:"a"},"Any")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Assign#concat"},Object(b.b)("inlineCode",{parentName:"a"},"Assign")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Const#concat"},Object(b.b)("inlineCode",{parentName:"a"},"Const")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Either#concat"},Object(b.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Endo#concat"},Object(b.b)("inlineCode",{parentName:"a"},"Endo")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Equiv#concat"},Object(b.b)("inlineCode",{parentName:"a"},"Equiv")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/First#concat"},Object(b.b)("inlineCode",{parentName:"a"},"First")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Identity"),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Last#concat"},Object(b.b)("inlineCode",{parentName:"a"},"Last")),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Max#concat"},Object(b.b)("inlineCode",{parentName:"a"},"Max")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Maybe#concat"},Object(b.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Min#concat"},Object(b.b)("inlineCode",{parentName:"a"},"Min")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Pair#concat"},Object(b.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Pred#concat"},Object(b.b)("inlineCode",{parentName:"a"},"Pred")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Prod#concat"},Object(b.b)("inlineCode",{parentName:"a"},"Prod")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Result#concat"},Object(b.b)("inlineCode",{parentName:"a"},"Result")),", ",Object(b.b)("inlineCode",{parentName:"td"},"String"),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Sum#concat"},Object(b.b)("inlineCode",{parentName:"a"},"Sum")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Tuple#concat"},Object(b.b)("inlineCode",{parentName:"a"},"Tuple")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Unit"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"cons")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"contramap")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Arrow#contramap"},Object(b.b)("inlineCode",{parentName:"a"},"Arrow")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Equiv#contramap"},Object(b.b)("inlineCode",{parentName:"a"},"Equiv")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Pred#contramap"},Object(b.b)("inlineCode",{parentName:"a"},"Pred")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Star"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"either")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Either#either"},Object(b.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Maybe#either"},Object(b.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Result#either"},Object(b.b)("inlineCode",{parentName:"a"},"Result")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"empty")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../monoids/All#empty"},Object(b.b)("inlineCode",{parentName:"a"},"All")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Any#empty"},Object(b.b)("inlineCode",{parentName:"a"},"Any")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Assign#empty"},Object(b.b)("inlineCode",{parentName:"a"},"Assign")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Endo#empty"},Object(b.b)("inlineCode",{parentName:"a"},"Endo")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Equiv#empty"},Object(b.b)("inlineCode",{parentName:"a"},"Equiv")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/First#empty"},Object(b.b)("inlineCode",{parentName:"a"},"First")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Last#empty"},Object(b.b)("inlineCode",{parentName:"a"},"Last")),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Max#empty"},Object(b.b)("inlineCode",{parentName:"a"},"Max")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Min#empty"},Object(b.b)("inlineCode",{parentName:"a"},"Min")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Object"),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Pred#empty"},Object(b.b)("inlineCode",{parentName:"a"},"Pred")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Prod#empty"},Object(b.b)("inlineCode",{parentName:"a"},"Prod")),", ",Object(b.b)("inlineCode",{parentName:"td"},"String"),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Sum#empty"},Object(b.b)("inlineCode",{parentName:"a"},"Sum")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Unit"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"equals")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../monoids/All#equals"},Object(b.b)("inlineCode",{parentName:"a"},"All")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Any#equals"},Object(b.b)("inlineCode",{parentName:"a"},"Any")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Assign#equals"},Object(b.b)("inlineCode",{parentName:"a"},"Assign")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Boolean"),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Const#equals"},Object(b.b)("inlineCode",{parentName:"a"},"Const")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Either#equals"},Object(b.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/First#equals"},Object(b.b)("inlineCode",{parentName:"a"},"First")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Last#equals"},Object(b.b)("inlineCode",{parentName:"a"},"Last")),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Max#equals"},Object(b.b)("inlineCode",{parentName:"a"},"Max")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Maybe#equals"},Object(b.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Min#equals"},Object(b.b)("inlineCode",{parentName:"a"},"Min")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Number"),", ",Object(b.b)("inlineCode",{parentName:"td"},"Object"),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Pair#equals"},Object(b.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Prod#equals"},Object(b.b)("inlineCode",{parentName:"a"},"Prod")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Result#equals"},Object(b.b)("inlineCode",{parentName:"a"},"Result")),", ",Object(b.b)("inlineCode",{parentName:"td"},"String"),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Sum#equals"},Object(b.b)("inlineCode",{parentName:"a"},"Sum")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Tuple#equals"},Object(b.b)("inlineCode",{parentName:"a"},"Tuple")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Unit"),", ",Object(b.b)("inlineCode",{parentName:"td"},"Writer"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"../crocks/State#evalwith-pointfree"},Object(b.b)("inlineCode",{parentName:"a"},"evalWith"))),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/State#evalwith"},Object(b.b)("inlineCode",{parentName:"a"},"State")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"../crocks/State#execwith-pointfree"},Object(b.b)("inlineCode",{parentName:"a"},"execWith"))),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/State#execwith"},Object(b.b)("inlineCode",{parentName:"a"},"State")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"extend")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Pair#extend"},Object(b.b)("inlineCode",{parentName:"a"},"Pair")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"filter")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"),", ",Object(b.b)("inlineCode",{parentName:"td"},"Object"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"first")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Arrow#first"},Object(b.b)("inlineCode",{parentName:"a"},"Arrow")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Function"),", ",Object(b.b)("inlineCode",{parentName:"td"},"Star"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"fold")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"foldMap")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"../crocks/Pair#fst-pointfree"},Object(b.b)("inlineCode",{parentName:"a"},"fst"))),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Pair#fst"},Object(b.b)("inlineCode",{parentName:"a"},"Pair")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"head")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"),", ",Object(b.b)("inlineCode",{parentName:"td"},"String"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"init")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"),", ",Object(b.b)("inlineCode",{parentName:"td"},"String"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"last")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"),", ",Object(b.b)("inlineCode",{parentName:"td"},"String"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"log")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Writer"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"map")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Async#map"},Object(b.b)("inlineCode",{parentName:"a"},"Async")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Arrow#map"},Object(b.b)("inlineCode",{parentName:"a"},"Arrow")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Const#map"},Object(b.b)("inlineCode",{parentName:"a"},"Const")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Either#map"},Object(b.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Function"),", ",Object(b.b)("inlineCode",{parentName:"td"},"Identity"),", ",Object(b.b)("inlineCode",{parentName:"td"},"IO"),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Maybe#map"},Object(b.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Object"),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Pair#map"},Object(b.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Reader#map"},Object(b.b)("inlineCode",{parentName:"a"},"Reader")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Result#map"},Object(b.b)("inlineCode",{parentName:"a"},"Result")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Star"),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/State#map"},Object(b.b)("inlineCode",{parentName:"a"},"State")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Tuple#map"},Object(b.b)("inlineCode",{parentName:"a"},"Tuple")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Unit"),", ",Object(b.b)("inlineCode",{parentName:"td"},"Writer"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"merge")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Pair#merge"},Object(b.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Tuple#merge"},Object(b.b)("inlineCode",{parentName:"a"},"Tuple")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"option")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../monoids/First#option"},Object(b.b)("inlineCode",{parentName:"a"},"First")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Last#option"},Object(b.b)("inlineCode",{parentName:"a"},"Last")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Maybe#option"},Object(b.b)("inlineCode",{parentName:"a"},"Maybe")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"promap")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Arrow#promap"},Object(b.b)("inlineCode",{parentName:"a"},"Arrow")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Star"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"../crocks/Async#race-pointfree"},Object(b.b)("inlineCode",{parentName:"a"},"race"))),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Async#race"},Object(b.b)("inlineCode",{parentName:"a"},"Async")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"read")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Writer"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"reduce")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"reduceRight")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"reject")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"),", ",Object(b.b)("inlineCode",{parentName:"td"},"Object"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"run")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"IO"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"runWith")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Arrow#runwith"},Object(b.b)("inlineCode",{parentName:"a"},"Arrow")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Endo#runwith"},Object(b.b)("inlineCode",{parentName:"a"},"Endo")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Pred#runwith"},Object(b.b)("inlineCode",{parentName:"a"},"Pred")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Reader#runwith"},Object(b.b)("inlineCode",{parentName:"a"},"Reader")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Star"),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/State#runwith"},Object(b.b)("inlineCode",{parentName:"a"},"State")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"second")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Arrow#second"},Object(b.b)("inlineCode",{parentName:"a"},"Arrow")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Function"),", ",Object(b.b)("inlineCode",{parentName:"td"},"Star"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"sequence")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Either#sequence"},Object(b.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Identity"),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Maybe#sequence"},Object(b.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Pair#sequence"},Object(b.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Result#sequence"},Object(b.b)("inlineCode",{parentName:"a"},"Result")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"../crocks/Pair#snd-pointfree"},Object(b.b)("inlineCode",{parentName:"a"},"snd"))),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Pair#snd"},Object(b.b)("inlineCode",{parentName:"a"},"Pair")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"swap")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../crocks/Async#swap"},Object(b.b)("inlineCode",{parentName:"a"},"Async")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Either#swap"},Object(b.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Pair#swap"},Object(b.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Result#swap"},Object(b.b)("inlineCode",{parentName:"a"},"Result")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"tail")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"),", ",Object(b.b)("inlineCode",{parentName:"td"},"String"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"traverse")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Either#traverse"},Object(b.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Identity"),", ",Object(b.b)("inlineCode",{parentName:"td"},"List"),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Maybe#traverse"},Object(b.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Pair#traverse"},Object(b.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Result#traverse"},Object(b.b)("inlineCode",{parentName:"a"},"Result")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"valueOf")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"../monoids/All#valueof"},Object(b.b)("inlineCode",{parentName:"a"},"All")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Any#valueof"},Object(b.b)("inlineCode",{parentName:"a"},"Any")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Assign#valueof"},Object(b.b)("inlineCode",{parentName:"a"},"Assign")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Const#valueof"},Object(b.b)("inlineCode",{parentName:"a"},"Const")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Endo#valueof"},Object(b.b)("inlineCode",{parentName:"a"},"Endo")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Equiv#valueof"},Object(b.b)("inlineCode",{parentName:"a"},"Equiv")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/First#valueof"},Object(b.b)("inlineCode",{parentName:"a"},"First")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Identity"),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Last#valueof"},Object(b.b)("inlineCode",{parentName:"a"},"Last")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Max#valueof"},Object(b.b)("inlineCode",{parentName:"a"},"Max")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Min#valueof"},Object(b.b)("inlineCode",{parentName:"a"},"Min")),", ",Object(b.b)("a",{parentName:"td",href:"../crocks/Pred#valueof"},Object(b.b)("inlineCode",{parentName:"a"},"Pred")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Prod#valueof"},Object(b.b)("inlineCode",{parentName:"a"},"Prod")),", ",Object(b.b)("a",{parentName:"td",href:"../monoids/Sum#valueof"},Object(b.b)("inlineCode",{parentName:"a"},"Sum")),", ",Object(b.b)("inlineCode",{parentName:"td"},"Unit"),", ",Object(b.b)("inlineCode",{parentName:"td"},"Writer"))))))}o.isMDXComponent=!0}}]);