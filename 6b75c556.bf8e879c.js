(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{100:function(e,t,a){"use strict";a.d(t,"a",(function(){return l})),a.d(t,"b",(function(){return m}));var n=a(0),b=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,b=function(e,t){if(null==e)return{};var a,n,b={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(b[a]=e[a]);return b}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(b[a]=e[a])}return b}var O=b.a.createContext({}),j=function(e){var t=b.a.useContext(O),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},l=function(e){var t=j(e.components);return b.a.createElement(O.Provider,{value:t},e.children)},o={inlineCode:"code",wrapper:function(e){var t=e.children;return b.a.createElement(b.a.Fragment,{},t)}},p=b.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,O=d(e,["components","mdxType","originalType","parentName"]),l=j(a),p=n,m=l["".concat(c,".").concat(p)]||l[p]||o[p]||r;return a?b.a.createElement(m,i(i({ref:t},O),{},{components:a})):b.a.createElement(m,i({ref:t},O))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,c=new Array(r);c[0]=p;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var O=2;O<r;O++)c[O]=a[O];return b.a.createElement.apply(null,c)}return b.a.createElement.apply(null,a)}p.displayName="MDXCreateElement"},69:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return d})),a.d(t,"default",(function(){return j}));var n=a(2),b=a(6),r=(a(0),a(100)),c={title:"Point-free Functions",description:"Point-free Functions API",layout:"notopic",functions:["alt","ap","bichain","bimap","both","chain","coalesce","comparewith","concat","cons","contramap","either","empty","equals","extend","filter","first","fold","foldmap","head","init","last","map","merge","option","promap","race","reduce","reduceright","run","runwith","second","sequence","swap","tail","traverse","valueof"],weight:50},i={unversionedId:"functions/pointfree-functions",id:"functions/pointfree-functions",isDocsHomePage:!1,title:"Point-free Functions",description:"Point-free Functions API",source:"@site/docs/functions/pointfree-functions.md",slug:"/functions/pointfree-functions",permalink:"/crocks/docs/docs/functions/pointfree-functions",editUrl:"https://github.com/evilsoft/crocks/edit/master/docs/docs/functions/pointfree-functions.md",version:"current",sidebar:"sidebar",previous:{title:"Logic Functions",permalink:"/crocks/docs/docs/functions/logic-functions"},next:{title:"Predicate Functions",permalink:"/crocks/docs/docs/functions/predicate-functions"}},d=[],O={rightToc:d};function j(e){var t=e.components,a=Object(b.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},O,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"While it can seem natural to work with all these containers in a fluent fashion,\nit can get cumbersome and hard to get a lot of reuse out of. A way to really get\nthe most out of re-usability in JavaScript is to take what is called a point-free\napproach. Below is a small code same to contrast the difference between the two\ncalling styles:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js",metastring:"runkit",runkit:!0}),"import map from 'crocks/pointfree/map'\n\nimport compose from 'crocks/helpers/compose'\nimport isInteger from 'crocks/predicates/isInteger'\nimport safe from 'crocks/Maybe/safe'\n\n// isEven :: Integer -> Boolean\nconst isEven = x =>\n  x % 2 === 0\n\n// maybeInt :: a -> Maybe Integer\nconst maybeInt =\n  safe(isInteger)\n\n// fluentIsEven :: a -> Maybe Boolean\nconst fluentIsEven = data =>\n  maybeInt(data)\n    .map(isEven)\n\n// pointfreeIsEven :: a -> Maybe Boolean\nconst pointfreeIsEven =\n  compose(map(isEven), maybeInt)\n\nfluentIsEven(5)\n//=> Just false\n\nfluentIsEven('number')\n//=> Nothing\n\nfluentIsEven(6)\n//=> Just true\n\npointfreeIsEven(5)\n//=> Just false\n\npointfreeIsEven('not even')\n//=> Nothing\n\npointfreeIsEven(6)\n//=> Just true\n")),Object(r.b)("p",null,"These functions provide a very clean way to build out very simple functions and\ncompose them all together to compose a more complicated flow. Each point-free\nfunction provided in ",Object(r.b)("inlineCode",{parentName:"p"},"crocks"),' is "auto-curried" and follows a "data-last"\npattern in the order of how it receives it\'s arguments. Typically the most\nstable of the arguments comes first, moving all the way to the least stable\nargument (which usually is the data flowing through your composition). Below\nlists the provided functions and the data types they work with (',Object(r.b)("inlineCode",{parentName:"p"},"m")," refers to an\naccepted Datatype):"),Object(r.b)("h4",{id:"signatures"},"Signatures"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Function"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Signature"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Location"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"alt")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m a -> m a -> m a")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"ap")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m a -> m (a -> b) -> m b")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"bichain")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(a -> m c d) -> (b -> m c d) -> m a b -> m c d")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"bimap")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(a -> c) -> (b -> d) -> m a b -> m c d")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"both")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m (a -> b) -> m (Pair a a -> Pair b b)")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"chain")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(a -> m b) -> m a -> m b")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"coalesce")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(a -> c) -> (b -> c) -> m a b -> m _ c")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"compareWith")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"a -> a -> m a -> b")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"concat")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m a -> m a -> m a")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"cons")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"a -> m a -> m a")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"contramap")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(b -> a) -> m a -> m b")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"either")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(a -> c) -> (b -> c) -> m a b -> c")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"empty")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m -> m")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"equals")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m -> m -> Boolean")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/State#evalwith-pointfree"}),Object(r.b)("inlineCode",{parentName:"a"},"evalWith"))),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"s -> m -> a")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/State"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/State#execwith-pointfree"}),Object(r.b)("inlineCode",{parentName:"a"},"execWith"))),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"s -> m -> s")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/State"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"extend")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(m a -> b) -> m a -> m b")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"filter")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"((a -> Boolean) ","|"," Pred a) -> m a -> m a")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"first")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m (a -> b) -> m (Pair a c -> Pair b c)")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"fold")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Semigroup s => m s -> s")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"foldMap")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Semigroup s => (a -> s) -> m a -> s")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pair#fst-pointfree"}),Object(r.b)("inlineCode",{parentName:"a"},"fst"))),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m a b -> a")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Pair"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"head")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m a -> Maybe a")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"init")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m a -> Maybe (m a)")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"last")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m a -> Maybe a")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"log")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m a b -> a")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Writer"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"map")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(a -> b) -> m a -> m b")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"merge")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(a -> b -> c) -> m a b -> c")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Tuple#nmap"}),Object(r.b)("inlineCode",{parentName:"a"},"nmap"))),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Integer -> ...(* -> *) m ...* -> m ...*")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Tuple"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"option")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"a -> m a -> a")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Tuple#project"}),Object(r.b)("inlineCode",{parentName:"a"},"project"))),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Integer -> m ...* -> a")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Tuple"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"promap")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(c -> a) -> (b -> d) -> m a b -> m c d")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Async#race-pointfree"}),Object(r.b)("inlineCode",{parentName:"a"},"race"))),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m e a -> m e a -> m e a")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Async"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"read")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m a b -> Pair a b")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Writer"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"reduce")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(b -> a -> b) -> b -> m a -> b")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"reduceRight")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(b -> a -> b) -> b -> m a -> b")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"reject")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"((a -> Boolean) ","|"," Pred a) -> m a -> m a")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"run")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m a -> b")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"runWith")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"a -> m -> b")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"second")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m (a -> b) -> m (Pair c a -> Pair c b)")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"sequence")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"Applicative TypeRep t, Apply f => (t ","|"," (b -> f b)) -> m (f a) -> f (m a)")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pair#snd-pointfree"}),Object(r.b)("inlineCode",{parentName:"a"},"snd"))),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m a b -> b")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/Pair"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"swap")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"(c -> d) -> (a -> b) -> m c a -> m b d")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"tail")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m a -> Maybe (m a)")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"traverse")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("code",null,"Applicative TypeRep t, Apply f => (t ","|"," (c -> f c)) -> (a -> f b) -> m (f a) -> f (m b)")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"valueOf")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"m a -> a")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"crocks/pointfree"))))),Object(r.b)("h4",{id:"datatypes"},"Datatypes"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Function"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Datatypes"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"alt")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Async#alt"}),Object(r.b)("inlineCode",{parentName:"a"},"Async")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Either#alt"}),Object(r.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Maybe#alt"}),Object(r.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Result#alt"}),Object(r.b)("inlineCode",{parentName:"a"},"Result")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"ap")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Async#ap"}),Object(r.b)("inlineCode",{parentName:"a"},"Async")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Const#ap"}),Object(r.b)("inlineCode",{parentName:"a"},"Const")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Either#ap"}),Object(r.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Identity"),", ",Object(r.b)("inlineCode",{parentName:"td"},"IO"),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Maybe#ap"}),Object(r.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pair#ap"}),Object(r.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Reader#ap"}),Object(r.b)("inlineCode",{parentName:"a"},"Reader")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Result#ap"}),Object(r.b)("inlineCode",{parentName:"a"},"Result")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/State#ap"}),Object(r.b)("inlineCode",{parentName:"a"},"State")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Unit"),", ",Object(r.b)("inlineCode",{parentName:"td"},"Writer"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"bichain")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Async#bichain"}),Object(r.b)("inlineCode",{parentName:"a"},"Async")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Either#bichain"}),Object(r.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Maybe#bichain"}),Object(r.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Result#bichain"}),Object(r.b)("inlineCode",{parentName:"a"},"Result")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"bimap")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Async#bimap"}),Object(r.b)("inlineCode",{parentName:"a"},"Async")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Either#bimap"}),Object(r.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pair#bimap"}),Object(r.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Result#bimap"}),Object(r.b)("inlineCode",{parentName:"a"},"Result")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"both")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Arrow#both"}),Object(r.b)("inlineCode",{parentName:"a"},"Arrow")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Function"),", ",Object(r.b)("inlineCode",{parentName:"td"},"Star"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"chain")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Async#chain"}),Object(r.b)("inlineCode",{parentName:"a"},"Async")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Const#chain"}),Object(r.b)("inlineCode",{parentName:"a"},"Const")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Either#chain"}),Object(r.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Identity"),", ",Object(r.b)("inlineCode",{parentName:"td"},"IO"),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Maybe#chain"}),Object(r.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pair#chain"}),Object(r.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Reader#chain"}),Object(r.b)("inlineCode",{parentName:"a"},"Reader")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Result#chain"}),Object(r.b)("inlineCode",{parentName:"a"},"Result")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/State#chain"}),Object(r.b)("inlineCode",{parentName:"a"},"State")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Unit"),", ",Object(r.b)("inlineCode",{parentName:"td"},"Writer"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"coalesce")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Async#coalesce"}),Object(r.b)("inlineCode",{parentName:"a"},"Async")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Either#coalesce"}),Object(r.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Maybe#coalesce"}),Object(r.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Result#coalesce"}),Object(r.b)("inlineCode",{parentName:"a"},"Result")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"compareWith")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Equiv#comparewith"}),Object(r.b)("inlineCode",{parentName:"a"},"Equiv")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"concat")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/All#concat"}),Object(r.b)("inlineCode",{parentName:"a"},"All")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Any#concat"}),Object(r.b)("inlineCode",{parentName:"a"},"Any")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Assign#concat"}),Object(r.b)("inlineCode",{parentName:"a"},"Assign")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Const#concat"}),Object(r.b)("inlineCode",{parentName:"a"},"Const")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Either#concat"}),Object(r.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Endo#concat"}),Object(r.b)("inlineCode",{parentName:"a"},"Endo")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Equiv#concat"}),Object(r.b)("inlineCode",{parentName:"a"},"Equiv")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/First#concat"}),Object(r.b)("inlineCode",{parentName:"a"},"First")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Identity"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Last#concat"}),Object(r.b)("inlineCode",{parentName:"a"},"Last")),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Max#concat"}),Object(r.b)("inlineCode",{parentName:"a"},"Max")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Maybe#concat"}),Object(r.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Min#concat"}),Object(r.b)("inlineCode",{parentName:"a"},"Min")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pair#concat"}),Object(r.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pred#concat"}),Object(r.b)("inlineCode",{parentName:"a"},"Pred")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Prod#concat"}),Object(r.b)("inlineCode",{parentName:"a"},"Prod")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Result#concat"}),Object(r.b)("inlineCode",{parentName:"a"},"Result")),", ",Object(r.b)("inlineCode",{parentName:"td"},"String"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Sum#concat"}),Object(r.b)("inlineCode",{parentName:"a"},"Sum")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Tuple#concat"}),Object(r.b)("inlineCode",{parentName:"a"},"Tuple")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Unit"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"cons")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"contramap")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Arrow#contramap"}),Object(r.b)("inlineCode",{parentName:"a"},"Arrow")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Equiv#contramap"}),Object(r.b)("inlineCode",{parentName:"a"},"Equiv")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pred#contramap"}),Object(r.b)("inlineCode",{parentName:"a"},"Pred")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Star"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"either")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Either#either"}),Object(r.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Maybe#either"}),Object(r.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Result#either"}),Object(r.b)("inlineCode",{parentName:"a"},"Result")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"empty")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/All#empty"}),Object(r.b)("inlineCode",{parentName:"a"},"All")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Any#empty"}),Object(r.b)("inlineCode",{parentName:"a"},"Any")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Assign#empty"}),Object(r.b)("inlineCode",{parentName:"a"},"Assign")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Endo#empty"}),Object(r.b)("inlineCode",{parentName:"a"},"Endo")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Equiv#empty"}),Object(r.b)("inlineCode",{parentName:"a"},"Equiv")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/First#empty"}),Object(r.b)("inlineCode",{parentName:"a"},"First")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Last#empty"}),Object(r.b)("inlineCode",{parentName:"a"},"Last")),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Max#empty"}),Object(r.b)("inlineCode",{parentName:"a"},"Max")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Min#empty"}),Object(r.b)("inlineCode",{parentName:"a"},"Min")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Object"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pred#empty"}),Object(r.b)("inlineCode",{parentName:"a"},"Pred")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Prod#empty"}),Object(r.b)("inlineCode",{parentName:"a"},"Prod")),", ",Object(r.b)("inlineCode",{parentName:"td"},"String"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Sum#empty"}),Object(r.b)("inlineCode",{parentName:"a"},"Sum")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Unit"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"equals")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/All#equals"}),Object(r.b)("inlineCode",{parentName:"a"},"All")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Any#equals"}),Object(r.b)("inlineCode",{parentName:"a"},"Any")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Assign#equals"}),Object(r.b)("inlineCode",{parentName:"a"},"Assign")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Boolean"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Const#equals"}),Object(r.b)("inlineCode",{parentName:"a"},"Const")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Either#equals"}),Object(r.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/First#equals"}),Object(r.b)("inlineCode",{parentName:"a"},"First")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Last#equals"}),Object(r.b)("inlineCode",{parentName:"a"},"Last")),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Max#equals"}),Object(r.b)("inlineCode",{parentName:"a"},"Max")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Maybe#equals"}),Object(r.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Min#equals"}),Object(r.b)("inlineCode",{parentName:"a"},"Min")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Number"),", ",Object(r.b)("inlineCode",{parentName:"td"},"Object"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pair#equals"}),Object(r.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Prod#equals"}),Object(r.b)("inlineCode",{parentName:"a"},"Prod")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Result#equals"}),Object(r.b)("inlineCode",{parentName:"a"},"Result")),", ",Object(r.b)("inlineCode",{parentName:"td"},"String"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Sum#equals"}),Object(r.b)("inlineCode",{parentName:"a"},"Sum")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Tuple#equals"}),Object(r.b)("inlineCode",{parentName:"a"},"Tuple")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Unit"),", ",Object(r.b)("inlineCode",{parentName:"td"},"Writer"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/State#evalwith-pointfree"}),Object(r.b)("inlineCode",{parentName:"a"},"evalWith"))),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/State#evalwith"}),Object(r.b)("inlineCode",{parentName:"a"},"State")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/State#execwith-pointfree"}),Object(r.b)("inlineCode",{parentName:"a"},"execWith"))),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/State#execwith"}),Object(r.b)("inlineCode",{parentName:"a"},"State")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"extend")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pair#extend"}),Object(r.b)("inlineCode",{parentName:"a"},"Pair")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"filter")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"),", ",Object(r.b)("inlineCode",{parentName:"td"},"Object"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"first")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Arrow#first"}),Object(r.b)("inlineCode",{parentName:"a"},"Arrow")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Function"),", ",Object(r.b)("inlineCode",{parentName:"td"},"Star"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"fold")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"foldMap")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pair#fst-pointfree"}),Object(r.b)("inlineCode",{parentName:"a"},"fst"))),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pair#fst"}),Object(r.b)("inlineCode",{parentName:"a"},"Pair")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"head")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"),", ",Object(r.b)("inlineCode",{parentName:"td"},"String"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"init")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"),", ",Object(r.b)("inlineCode",{parentName:"td"},"String"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"last")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"),", ",Object(r.b)("inlineCode",{parentName:"td"},"String"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"log")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Writer"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"map")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Async#map"}),Object(r.b)("inlineCode",{parentName:"a"},"Async")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Arrow#map"}),Object(r.b)("inlineCode",{parentName:"a"},"Arrow")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Const#map"}),Object(r.b)("inlineCode",{parentName:"a"},"Const")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Either#map"}),Object(r.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Function"),", ",Object(r.b)("inlineCode",{parentName:"td"},"Identity"),", ",Object(r.b)("inlineCode",{parentName:"td"},"IO"),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Maybe#map"}),Object(r.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Object"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pair#map"}),Object(r.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Reader#map"}),Object(r.b)("inlineCode",{parentName:"a"},"Reader")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Result#map"}),Object(r.b)("inlineCode",{parentName:"a"},"Result")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Star"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/State#map"}),Object(r.b)("inlineCode",{parentName:"a"},"State")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Tuple#map"}),Object(r.b)("inlineCode",{parentName:"a"},"Tuple")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Unit"),", ",Object(r.b)("inlineCode",{parentName:"td"},"Writer"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"merge")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pair#merge"}),Object(r.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Tuple#merge"}),Object(r.b)("inlineCode",{parentName:"a"},"Tuple")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"option")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/First#option"}),Object(r.b)("inlineCode",{parentName:"a"},"First")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Last#option"}),Object(r.b)("inlineCode",{parentName:"a"},"Last")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Maybe#option"}),Object(r.b)("inlineCode",{parentName:"a"},"Maybe")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"promap")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Arrow#promap"}),Object(r.b)("inlineCode",{parentName:"a"},"Arrow")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Star"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Async#race-pointfree"}),Object(r.b)("inlineCode",{parentName:"a"},"race"))),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Async#race"}),Object(r.b)("inlineCode",{parentName:"a"},"Async")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"read")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Writer"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"reduce")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"reduceRight")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"reject")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"),", ",Object(r.b)("inlineCode",{parentName:"td"},"Object"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"run")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"IO"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"runWith")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Arrow#runwith"}),Object(r.b)("inlineCode",{parentName:"a"},"Arrow")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Endo#runwith"}),Object(r.b)("inlineCode",{parentName:"a"},"Endo")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pred#runwith"}),Object(r.b)("inlineCode",{parentName:"a"},"Pred")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Reader#runwith"}),Object(r.b)("inlineCode",{parentName:"a"},"Reader")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Star"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/State#runwith"}),Object(r.b)("inlineCode",{parentName:"a"},"State")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"second")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Arrow#second"}),Object(r.b)("inlineCode",{parentName:"a"},"Arrow")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Function"),", ",Object(r.b)("inlineCode",{parentName:"td"},"Star"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"sequence")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Either#sequence"}),Object(r.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Identity"),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Maybe#sequence"}),Object(r.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pair#sequence"}),Object(r.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Result#sequence"}),Object(r.b)("inlineCode",{parentName:"a"},"Result")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pair#snd-pointfree"}),Object(r.b)("inlineCode",{parentName:"a"},"snd"))),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pair#snd"}),Object(r.b)("inlineCode",{parentName:"a"},"Pair")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"swap")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Async#swap"}),Object(r.b)("inlineCode",{parentName:"a"},"Async")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Either#swap"}),Object(r.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pair#swap"}),Object(r.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Result#swap"}),Object(r.b)("inlineCode",{parentName:"a"},"Result")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"tail")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"),", ",Object(r.b)("inlineCode",{parentName:"td"},"String"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"traverse")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"Array"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Either#traverse"}),Object(r.b)("inlineCode",{parentName:"a"},"Either")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Identity"),", ",Object(r.b)("inlineCode",{parentName:"td"},"List"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Maybe#traverse"}),Object(r.b)("inlineCode",{parentName:"a"},"Maybe")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pair#traverse"}),Object(r.b)("inlineCode",{parentName:"a"},"Pair")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Result#traverse"}),Object(r.b)("inlineCode",{parentName:"a"},"Result")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"valueOf")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/All#valueof"}),Object(r.b)("inlineCode",{parentName:"a"},"All")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Any#valueof"}),Object(r.b)("inlineCode",{parentName:"a"},"Any")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Assign#valueof"}),Object(r.b)("inlineCode",{parentName:"a"},"Assign")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Const#valueof"}),Object(r.b)("inlineCode",{parentName:"a"},"Const")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Endo#valueof"}),Object(r.b)("inlineCode",{parentName:"a"},"Endo")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Equiv#valueof"}),Object(r.b)("inlineCode",{parentName:"a"},"Equiv")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/First#valueof"}),Object(r.b)("inlineCode",{parentName:"a"},"First")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Identity"),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Last#valueof"}),Object(r.b)("inlineCode",{parentName:"a"},"Last")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Max#valueof"}),Object(r.b)("inlineCode",{parentName:"a"},"Max")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Min#valueof"}),Object(r.b)("inlineCode",{parentName:"a"},"Min")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../crocks/Pred#valueof"}),Object(r.b)("inlineCode",{parentName:"a"},"Pred")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Prod#valueof"}),Object(r.b)("inlineCode",{parentName:"a"},"Prod")),", ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"../monoids/Sum#valueof"}),Object(r.b)("inlineCode",{parentName:"a"},"Sum")),", ",Object(r.b)("inlineCode",{parentName:"td"},"Unit"),", ",Object(r.b)("inlineCode",{parentName:"td"},"Writer"))))))}j.isMDXComponent=!0}}]);